{
  "version": 3,
  "sources": ["../../src/utils/StatefulLibrary.ts"],
  "sourcesContent": ["import localforage from 'localforage';\nimport { EventEmitter } from 'eventemitter3';\nimport { Epub, BookInfo } from './Epub';\n\nconst LAST_BOOK_ID = 'last-book-id';\nconst catalogue = localforage.createInstance({ name: 'catalogue' });\nconst shelf = localforage.createInstance({ name: 'shelf' });\nconst memory = localforage.createInstance({ name: 'memory' });\n\nexport class StatefulLibrary extends EventEmitter {\n\t/**\n\t * @returns the new library item\n\t */\n\tpublic async add(epub: Epub): Promise<Epub> {\n\t\tawait catalogue.setItem(epub.info.id, epub.info);\n\t\tawait shelf.setItem(epub.info.id, epub.content);\n\t\tthis.emit('item-added', epub.info);\n\t\treturn epub;\n\t}\n\n\t/**\n\t * @returns the new library item\n\t */\n\tpublic async addFromFileDialog(): Promise<Epub> {\n\t\treturn this.add(await Epub.fromFileDialog());\n\t}\n\n\tpublic async remove(id: string): Promise<void> {\n\t\tawait catalogue.removeItem(id);\n\t\tawait shelf.removeItem(id);\n\t\tthis.emit('item-removed', id);\n\t}\n\n\tpublic async index(): Promise<BookInfo[]> {\n\t\tconst keys = await catalogue.keys();\n\t\treturn Promise.all(keys.map((key) => this.getInfo(key)));\n\t}\n\n\tpublic async get(id: string): Promise<Epub> {\n\t\tconst info = await this.getInfo(id);\n\t\tconst content = await shelf.getItem<ArrayBuffer>(id);\n\t\tawait memory.setItem(LAST_BOOK_ID, id);\n\t\treturn new Epub(info, content);\n\t}\n\n\tpublic async getInfo(id: string): Promise<BookInfo> {\n\t\treturn catalogue.getItem<BookInfo>(id);\n\t}\n\n\tpublic async getLastBookId(): Promise<string> {\n\t\treturn memory.getItem<string>(LAST_BOOK_ID);\n\t}\n\n\tpublic async updateInfo(info: BookInfo): Promise<BookInfo> {\n\t\treturn catalogue.setItem<BookInfo>(info.id, info);\n\t}\n}\n\nexport const library = new StatefulLibrary();\n"],
  "mappings": "AAAA;AACA;AACA;AAEA,MAAM,eAAe;AACrB,MAAM,YAAY,YAAY,eAAe,EAAE,MAAM;AACrD,MAAM,QAAQ,YAAY,eAAe,EAAE,MAAM;AACjD,MAAM,SAAS,YAAY,eAAe,EAAE,MAAM;AAE3C,qCAA8B,aAAa;AAAA,QAIpC,IAAI,MAA2B;AAC3C,UAAM,UAAU,QAAQ,KAAK,KAAK,IAAI,KAAK;AAC3C,UAAM,MAAM,QAAQ,KAAK,KAAK,IAAI,KAAK;AACvC,SAAK,KAAK,cAAc,KAAK;AAC7B,WAAO;AAAA;AAAA,QAMK,oBAAmC;AAC/C,WAAO,KAAK,IAAI,MAAM,KAAK;AAAA;AAAA,QAGf,OAAO,IAA2B;AAC9C,UAAM,UAAU,WAAW;AAC3B,UAAM,MAAM,WAAW;AACvB,SAAK,KAAK,gBAAgB;AAAA;AAAA,QAGd,QAA6B;AACzC,UAAM,OAAO,MAAM,UAAU;AAC7B,WAAO,QAAQ,IAAI,KAAK,IAAI,CAAC,QAAQ,KAAK,QAAQ;AAAA;AAAA,QAGtC,IAAI,IAA2B;AAC3C,UAAM,OAAO,MAAM,KAAK,QAAQ;AAChC,UAAM,UAAU,MAAM,MAAM,QAAqB;AACjD,UAAM,OAAO,QAAQ,cAAc;AACnC,WAAO,IAAI,KAAK,MAAM;AAAA;AAAA,QAGV,QAAQ,IAA+B;AACnD,WAAO,UAAU,QAAkB;AAAA;AAAA,QAGvB,gBAAiC;AAC7C,WAAO,OAAO,QAAgB;AAAA;AAAA,QAGlB,WAAW,MAAmC;AAC1D,WAAO,UAAU,QAAkB,KAAK,IAAI;AAAA;AAAA;AAIvC,aAAM,UAAU,IAAI;",
  "names": []
}
